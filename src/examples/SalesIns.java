/*
 * Copyright (c) 2010, Oracle. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of Oracle nor the names of its contributors
 *   may be used to endorse or promote products derived from this software without
 *   specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

package examples;

import java.sql.*;
import javax.swing.*;
import java.text.SimpleDateFormat;

public class SalesIns extends javax.swing.JFrame {
   private SalesMenu parent; 
   private Connection con;
   private String TABLE_NAME = "Customer";
    /** Creates new form SalesIns */
    public SalesIns(SalesMenu sm,Connection con ) {
        parent = sm;
        this.con = con;
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldSSN = new javax.swing.JTextField();
        jTextFieldName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldDOB = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPaneAddress = new javax.swing.JTextPane();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldPhone = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldEmail = new javax.swing.JTextField();
        jComboBoxGender = new javax.swing.JComboBox();
        jButtonInsert = new javax.swing.JButton();
        jButtonClear = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButtonBack = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldCustId = new javax.swing.JTextField();
        jButtonSelect = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jLabelResponse = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Insert Customer Form");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Insert/Update Data"));

        jLabel1.setText("SSN:");

        jLabel2.setText("Name*:");

        jLabel3.setText("Date of Birth (MM/DD/YYYY)*: ");

        jLabel4.setText("Gender*:");

        jLabel5.setText("Address*:");

        jTextFieldDOB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDOBActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jTextPaneAddress);

        jLabel6.setText("Phone:");

        jLabel7.setText("Email:");

        jTextFieldEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEmailActionPerformed(evt);
            }
        });

        jComboBoxGender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "M", "F", " " }));

        jButtonInsert.setText("Insert");
        jButtonInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertActionPerformed(evt);
            }
        });

        jButtonClear.setText("Clear");
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        jButtonUpdate.setText("Update");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel3)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(jLabel5)
                                    .add(jLabel4))
                                .add(4, 4, 4)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel7)
                            .add(jLabel6))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel2)
                            .add(jLabel1))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)))
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jComboBoxGender, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jTextFieldPhone)
                            .add(jTextFieldEmail, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE))
                        .add(51, 51, 51)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jButtonInsert, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .add(jButtonUpdate, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jButtonClear, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)))
                    .add(jTextFieldDOB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextFieldSSN, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                        .add(jTextFieldName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 164, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 164, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jTextFieldSSN, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel1))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jTextFieldName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel2))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jTextFieldDOB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel3))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jComboBoxGender, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel4))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel5)
                            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(8, 8, 8)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jTextFieldPhone, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel6))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jTextFieldEmail, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel7)))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(171, 171, 171)
                        .add(jButtonInsert)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButtonUpdate)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButtonClear)))
                .addContainerGap())
        );

        jButtonBack.setText("Back");
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Select/Update Condition"));

        jLabel8.setText("Customer Id:");

        jButtonSelect.setText("Select");
        jButtonSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelectActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(97, 97, 97)
                .add(jLabel8)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jTextFieldCustId, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 131, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(49, 49, 49)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jButtonSelect, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                    .add(jButtonDelete, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextFieldCustId, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel8)
                    .add(jButtonSelect))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButtonDelete))
        );

        jLabelResponse.setText("Database Response:");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(20, 20, 20)
                        .add(jLabelResponse, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(369, Short.MAX_VALUE)
                        .add(jButtonBack, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 78, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 18, Short.MAX_VALUE)
                .add(jButtonBack)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabelResponse)
                .add(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jTextFieldEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEmailActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jTextFieldEmailActionPerformed

private void jTextFieldDOBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDOBActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jTextFieldDOBActionPerformed

private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
// TODO add your handling code here:
    this.setVisible(false);
    parent.setVisible(true);
}//GEN-LAST:event_jButtonBackActionPerformed

private void jButtonInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertActionPerformed
// TODO add your handling code here:
    if(jTextFieldName.getText().equals("")||jTextFieldDOB.getText().equals("")||jTextPaneAddress.getText().equals("")) {
        JOptionPane.showMessageDialog(this,"Mandatory fielda cannot be empty.","Error",JOptionPane.ERROR_MESSAGE);
    }
    else insertCustomer();
}//GEN-LAST:event_jButtonInsertActionPerformed

private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
// TODO add your handling code here:
    clearForm();
}//GEN-LAST:event_jButtonClearActionPerformed

private void jButtonSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelectActionPerformed
// TODO add your handling code here:
    selectCustomer();
}//GEN-LAST:event_jButtonSelectActionPerformed

private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
// TODO add your handling code here:
    if(JOptionPane.showConfirmDialog(this,"Are you sure?","Confirmation",JOptionPane.YES_NO_OPTION)==0)
        deleteCustomer();
}//GEN-LAST:event_jButtonDeleteActionPerformed

private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
// TODO add your handling code here:
    if(JOptionPane.showConfirmDialog(this,"Are you sure?","Confirmation",JOptionPane.YES_NO_OPTION)==0)
    updateCustomer();
}//GEN-LAST:event_jButtonUpdateActionPerformed
    
    /**
     * @param args the command line arguments
     */
private void insertCustomer() {
    System.out.println("Inserting...");
    try {
            Statement stmt2 = con.createStatement();
            String query = "INSERT INTO " + TABLE_NAME ;//+ "(customer_id, ssn,name,DOB,gender,address,phone,email) ";
            query += " VALUES(customer_seq.nextval,";
            if(jTextFieldSSN.getText().equals(""))
                query += "NULL,";
            else query +=  jTextFieldSSN.getText() + ",";
            query += "\'" + jTextFieldName.getText() + "\',";
            query += "to_date(\'" + jTextFieldDOB.getText() + "\',\'MM/DD/YYYY\')" + ",\'";
            query += jComboBoxGender.getSelectedItem() + "\',\'";
            query += jTextPaneAddress.getText() + "\',";
            if(jTextFieldPhone.getText().equals(""))
                query += "NULL,";
            else  query += "\'" +jTextFieldPhone.getText() + "\',";
            if(jTextFieldEmail.getText().equals(""))
                query += "NULL)";
            else query += "\'" + jTextFieldEmail.getText() + "\')";
            
            System.out.println(query);
            int i = stmt2.executeUpdate(query);
            if(i>0) jLabelResponse.setText("Database Response: 1 record inserted.");
            else jLabelResponse.setText("Database Response: No record inserted.");
            clearForm();
    }
    catch(Exception e){System.out.println(e.getMessage());
        jLabelResponse.setText("Database Response: " + e.getMessage()); }
    
}

private void updateCustomer() {
    System.out.println("Updating...");
    try {
            Statement stmt2 = con.createStatement();
            String query = "UPDATE " + TABLE_NAME + " SET ssn = ";//+ "(customer_id, ssn,name,DOB,gender,address,phone,email) ";
            if(jTextFieldSSN.getText().equals(""))
                query += "NULL,";
            else query +=  jTextFieldSSN.getText() + ",";
            query += "name = \'" + jTextFieldName.getText() + "\',";
            query += "dob = to_date(\'" + jTextFieldDOB.getText() + "\',\'MM/DD/YYYY\')" + ",gender = \'";
            query += jComboBoxGender.getSelectedItem() + "\',address = \'";
            query += jTextPaneAddress.getText() + "\',phone = ";
            if(jTextFieldPhone.getText().equals(""))
                query += "NULL, email = ";
            else  query += "\'" +jTextFieldPhone.getText() + "\',email = ";
            if(jTextFieldEmail.getText().equals(""))
                query += "NULL";
            else query += "\'" + jTextFieldEmail.getText() + "\'";
            query += " WHERE customer_id = " + jTextFieldCustId.getText();
            System.out.println(query);
            int i = stmt2.executeUpdate(query);
            if(i>0) jLabelResponse.setText("Database Response: 1 record updated.");
            jLabelResponse.setText("Database Response: No record updated.");
            clearForm();
    }
    catch(Exception e){System.out.println(e.getMessage());
        jLabelResponse.setText("Database Response: " + e.getMessage()); }
    
}

private void selectCustomer() {
    try{
           System.out.println("Selecting....");
           Statement stmt = con.createStatement();
           String query = "SELECT * FROM " + TABLE_NAME +
                            " WHERE customer_id = " + jTextFieldCustId.getText(); 
                    
              System.out.println(query);
              ResultSet table = stmt.executeQuery(query);
              
              
              if(!table.next())  {
                  System.out.println("No Row.");
                  jLabelResponse.setText("Database Response: No record selected.");    
                  clearForm();
              }
              else {
                 SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy"); 
                 
                 System.out.println("Customer Id: " + table.getInt(1));
                 System.out.println("SSN: " + table.getInt(2));
                 System.out.println("Name: " + table.getString(3));
                 System.out.println("DOB: " + table.getDate(4) + sdf.format(table.getDate(4)));
                 System.out.println("Gender: " + table.getString(5));
                 System.out.println("Address: " + table.getString(6));
                 System.out.println("Phone: " + table.getString(7));
                 System.out.println("Email: " + table.getString(8));
                if(table.getString(2)!=null) jTextFieldSSN.setText(Integer.toString(table.getInt(2)));
                jTextFieldName.setText(table.getString(3));
                jTextFieldDOB.setText(sdf.format(table.getDate(4)));
                jComboBoxGender.setSelectedItem(table.getString(5));
                jTextPaneAddress.setText(table.getString(6));
                jTextFieldPhone.setText(table.getString(7));
                jTextFieldEmail.setText(table.getString(8));
                
                jLabelResponse.setText("Database Response: 1 record selected.");    
               }
            }
            catch(Exception e){System.out.println(e.getMessage());
        jLabelResponse.setText("Database Response: " + e.getMessage());}           
}

public void deleteCustomer()  {
	    try{
                System.out.println("deleting....");
                 Statement stmt = con.createStatement();
                  String query = "DELETE FROM " + TABLE_NAME +
                          " WHERE customer_id = " + jTextFieldCustId.getText() ; 
               System.out.println(query);
               int i = stmt.executeUpdate(query);
               if(i>0) jLabelResponse.setText("Database Response: 1 record deleted." );
               else jLabelResponse.setText("Database Response: No record deleted." );
                clearForm();
            }
                  catch(Exception e){System.out.println(e.getMessage());
        jLabelResponse.setText("Database Response: " + e.getMessage());}
       }

private void clearForm() {
    jTextFieldCustId.setText("");
    jTextFieldSSN.setText("");
    jTextFieldName.setText("");
    jTextFieldDOB.setText("");
    jComboBoxGender.setSelectedItem("M");
    jTextPaneAddress.setText("");
    jTextFieldPhone.setText("");
    jTextFieldEmail.setText("");
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonInsert;
    private javax.swing.JButton jButtonSelect;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JComboBox jComboBoxGender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelResponse;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldCustId;
    private javax.swing.JTextField jTextFieldDOB;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldPhone;
    private javax.swing.JTextField jTextFieldSSN;
    private javax.swing.JTextPane jTextPaneAddress;
    // End of variables declaration//GEN-END:variables
    
}
